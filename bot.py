
# bot.py ‚Äî –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ Discord-–±–æ—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–π—Å–∞–º–∏

import discord
from discord.ext import commands
from discord import app_commands
import os
import random

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

# üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏
ALLOWED_ROLE_IDS = [1323420440919670908, 1330492203969282129]  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ ID —Å–≤–æ–∏—Ö —Ä–æ–ª–µ–π
FLIGHT_CHANNEL_ID = 1385932180005458011  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ ID –∫–∞–Ω–∞–ª–∞, –∫—É–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ–π—Å—ã

ROLE_CONFIG = {
    "pilot": {"label": "–ü–∏–ª–æ—Ç", "emoji": "‚úàÔ∏è", "limit": 1},
    "copilot": {"label": "–ö–æ-–ø–∏–ª–æ—Ç", "emoji": "‚úàÔ∏è", "limit": 1},
    "dispatcher": {"label": "–î–∏—Å–ø–µ—Ç—á–µ—Ä", "emoji": "üéß", "limit": 2},
    "ground": {"label": "–ù–∞–∑–µ–º–Ω–∞—è —Å–ª—É–∂–±–∞", "emoji": "üö®", "limit": 5},
    "steward": {"label": "–°—Ç—é–∞—Ä–¥", "emoji": "üöª", "limit": 3},
    "passenger": {"label": "–ü–∞—Å—Å–∞–∂–∏—Ä", "emoji": "üß≥", "limit": None},
}

active_flights = {}  # ID: {data}

class RoleView(discord.ui.View):
    def __init__(self, flight_id):
        super().__init__(timeout=None)
        self.flight_id = flight_id
        self.update_buttons()

    def update_buttons(self):
        self.clear_items()
        for key, info in ROLE_CONFIG.items():
            self.add_item(self.RoleButton(key, info))
        self.add_item(self.CancelButton())
    
    class RoleButton(discord.ui.Button):
        def __init__(self, key, info):
            super().__init__(label=info["label"], emoji=info["emoji"], style=discord.ButtonStyle.primary)
            self.role_key = key

        async def callback(self, interaction: discord.Interaction):
            flight = active_flights.get(interaction.message.id)
            if not flight:
                await interaction.response.send_message("–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            if interaction.user.id in flight["users"]:
                await interaction.response.send_message("–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.", ephemeral=True)
                return

            limit = ROLE_CONFIG[self.role_key]["limit"]
            if limit is not None and len(flight["roles"][self.role_key]) >= limit:
                await interaction.response.send_message("–í—Å–µ –º–µ—Å—Ç–∞ –∑–∞–Ω—è—Ç—ã.", ephemeral=True)
                return

            for k in flight["roles"]:
                flight["roles"][k] = [u for u in flight["roles"][k] if u != interaction.user.mention]

            for k in list(flight["users"].values()):
                if k == interaction.user.id:
                    flight["users"].pop(k, None)

            flight["roles"][self.role_key].append(interaction.user.mention)
            flight["users"][interaction.user.id] = self.role_key
            await interaction.message.edit(embed=generate_embed(flight), view=self.view)
            await interaction.response.send_message("–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã.", ephemeral=True)

    class CancelButton(discord.ui.Button):
        def __init__(self):
            super().__init__(label="–û—Ç–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å", emoji="‚õîÔ∏è", style=discord.ButtonStyle.danger)

        async def callback(self, interaction: discord.Interaction):
            flight = active_flights.get(interaction.message.id)
            if not flight:
                await interaction.response.send_message("–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            role_key = flight["users"].get(interaction.user.id)
            if not role_key:
                await interaction.response.send_message("–í—ã –Ω–µ –∑–∞–ø–∏—Å–∞–Ω—ã.", ephemeral=True)
                return

            flight["roles"][role_key].remove(interaction.user.mention)
            del flight["users"][interaction.user.id]
            await interaction.message.edit(embed=generate_embed(flight), view=self.view)
            await interaction.response.send_message("–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞.", ephemeral=True)

def generate_embed(flight):
    roles_text = "\n".join([
        f"{ROLE_CONFIG[k]['emoji']} {ROLE_CONFIG[k]['label']}: {', '.join(v) if v else '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'}"
        for k, v in flight["roles"].items()
    ])
    return discord.Embed(
        title=f"üõ´ –†–µ–π—Å {flight['id']}",
        description=(
            f"**–û—Ç–∫—É–¥–∞:** {flight['from']}\n"
            f"**–ö—É–¥–∞:** {flight['to']}\n"
            f"**–ü–µ—Ä–µ—Å–∞–¥–∫–∞:** {flight['transfer']}\n"
            f"**–ó–∞–ø–∞—Å–Ω–æ–π –∞—ç—Ä–æ–ø–æ—Ä—Ç:** {flight['alt']}\n"
            f"**–í—Ä–µ–º—è:** {flight['time']}\n"
            f"**–ì–µ–π—Ç:** {flight['gate']}\n\n" +
            roles_text
        ),
        color=discord.Color.blue()
    )

@bot.tree.command(name="—Ä–µ–π—Å", description="–°–æ–∑–¥–∞—Ç—å —Ä–µ–π—Å")
@app_commands.describe(
    departure="–ê—ç—Ä–æ–ø–æ—Ä—Ç –≤—ã–ª–µ—Ç–∞",
    arrival="–ê—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–∏–±—ã—Ç–∏—è",
    transfer="–ü–µ—Ä–µ—Å–∞–¥–∫–∞",
    alternate="–ó–∞–ø–∞—Å–Ω–æ–π –∞—ç—Ä–æ–ø–æ—Ä—Ç",
    time="–í—Ä–µ–º—è –≤—ã–ª–µ—Ç–∞",
    gate="–ì–µ–π—Ç"
)
async def —Ä–µ–π—Å(interaction: discord.Interaction, departure: str, arrival: str, transfer: str, alternate: str, time: str, gate: str):
    if not any(role.id in ALLOWED_ROLE_IDS for role in interaction.user.roles):
        await interaction.response.send_message("‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.", ephemeral=True)
        return

    flight_id = random.randint(1000, 9999)
    embed = discord.Embed(title="–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–π—Å–∞...", description="–û–∂–∏–¥–∞–π—Ç–µ...", color=discord.Color.blue())

    channel = bot.get_channel(FLIGHT_CHANNEL_ID)
    msg = await channel.send(embed=embed)

    active_flights[msg.id] = {
        "id": flight_id,
        "from": departure,
        "to": arrival,
        "transfer": transfer,
        "alt": alternate,
        "time": time,
        "gate": gate,
        "message": msg,
        "roles": {k: [] for k in ROLE_CONFIG},
        "users": {}
    }
    view = RoleView(flight_id)
    await msg.edit(embed=generate_embed(active_flights[msg.id]), view=view)
    await interaction.response.send_message(f"‚úÖ –†–µ–π—Å —Å–æ–∑–¥–∞–Ω. ID: {flight_id}", ephemeral=True)

@bot.tree.command(name="–∞–∫—Ç–∏–≤–Ω—ã–µ", description="–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–π—Å—ã")
async def –∞–∫—Ç–∏–≤–Ω—ã–µ(interaction: discord.Interaction):
    if not active_flights:
        await interaction.response.send_message("‚ùå –ê–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–π—Å–æ–≤ –Ω–µ—Ç.", ephemeral=True)
        return

    text = "\n".join([f"N.{flight['id']} | {flight['from']} ‚Üí {flight['to']} (–≥–µ–π—Ç {flight['gate']})" for flight in active_flights.values()])
    view = discord.ui.View()
    for msg_id, flight in active_flights.items():
        view.add_item(discord.ui.Button(label=f"N.{flight['id']}", style=discord.ButtonStyle.success, custom_id=f"show_{msg_id}"))

    await interaction.response.send_message(f"üìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–π—Å—ã:\n{text}", view=view, ephemeral=True)

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    try:
        await bot.tree.sync()
        print("üîÅ Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        if interaction.data["custom_id"].startswith("show_"):
            msg_id = int(interaction.data["custom_id"].split("_")[1])
            flight = active_flights.get(msg_id)
            if not flight:
                await interaction.response.send_message("–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return

            view = discord.ui.View()
            view.add_item(discord.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", style=discord.ButtonStyle.danger, custom_id=f"close_{msg_id}"))
            view.add_item(discord.ui.Button(label="–ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é", style=discord.ButtonStyle.primary, custom_id=f"edit_{msg_id}"))
            view.add_item(discord.ui.Button(label="–°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–π—Å", style=discord.ButtonStyle.danger, custom_id=f"delete_{msg_id}"))

            await interaction.response.send_message(embed=generate_embed(flight), view=view, ephemeral=True)
            return

        elif interaction.data["custom_id"].startswith("delete_"):
            msg_id = int(interaction.data["custom_id"].split("_")[1])
            flight = active_flights.pop(msg_id, None)
            if flight:
                await flight["message"].delete()
                await interaction.response.send_message("üóëÔ∏è –†–µ–π—Å —É–¥–∞–ª—ë–Ω.", ephemeral=True)
            else:
                await interaction.response.send_message("–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return

        elif interaction.data["custom_id"].startswith("close_"):
            msg_id = int(interaction.data["custom_id"].split("_")[1])
            flight = active_flights.get(msg_id)
            if flight:
                await flight["message"].edit(view=None)
                await interaction.response.send_message("üîí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞.", ephemeral=True)
            return

bot.run(os.getenv("TOKEN"))
