# bot.py

import discord
from discord.ext import commands
from discord import app_commands
import os
import random

intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

ALLOWED_ROLE_IDS = [123456789012345678]  # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏
FLIGHT_CHANNEL_ID = 123456789012345678   # ‚Üê –ó–∞–º–µ–Ω–∏ –Ω–∞ ID –∫–∞–Ω–∞–ª–∞

ROLE_CONFIG = {
    "pilot": {"label": "–ü–∏–ª–æ—Ç", "emoji": "‚úàÔ∏è", "limit": 1},
    "copilot": {"label": "–ö–æ-–ø–∏–ª–æ—Ç", "emoji": "‚úàÔ∏è", "limit": 1},
    "dispatcher": {"label": "–î–∏—Å–ø–µ—Ç—á–µ—Ä", "emoji": "üéß", "limit": 2},
    "ground": {"label": "–ù–∞–∑–µ–º–Ω–∞—è —Å–ª—É–∂–±–∞", "emoji": "üö®", "limit": 5},
    "steward": {"label": "–°—Ç—é–∞—Ä–¥", "emoji": "üöª", "limit": 3},
    "passenger": {"label": "–ü–∞—Å—Å–∞–∂–∏—Ä", "emoji": "üß≥", "limit": None},
}

active_flights = {}

class RoleView(discord.ui.View):
    def __init__(self, flight_id):
        super().__init__(timeout=None)
        self.flight_id = flight_id
        self.update_buttons()

    def update_buttons(self):
        self.clear_items()
        for key in ROLE_CONFIG:
            self.add_item(self.RoleButton(key))
        self.add_item(self.CancelButton())

    class RoleButton(discord.ui.Button):
        def __init__(self, role_key):
            info = ROLE_CONFIG[role_key]
            super().__init__(label=info["label"], emoji=info["emoji"], style=discord.ButtonStyle.primary)
            self.role_key = role_key

        async def callback(self, interaction: discord.Interaction):
            flight = active_flights.get(interaction.message.id)
            if not flight:
                return await safe_send(interaction, "–†–µ–π—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.")

            if interaction.user.id in flight["users"]:
                return await safe_send(interaction, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

            if ROLE_CONFIG[self.role_key]["limit"] is not None and \
               len(flight["roles"][self.role_key]) >= ROLE_CONFIG[self.role_key]["limit"]:
                return await safe_send(interaction, "–ú–µ—Å—Ç –±–æ–ª—å—à–µ –Ω–µ—Ç.")

            # —É–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é —Ä–æ–ª—å
            for r, users in flight["roles"].items():
                if interaction.user.mention in users:
                    users.remove(interaction.user.mention)
                    flight["users"].pop(interaction.user.id, None)

            flight["roles"][self.role_key].append(interaction.user.mention)
            flight["users"][interaction.user.id] = self.role_key
            await interaction.message.edit(embed=generate_embed(flight), view=self.view)
            await safe_send(interaction, "–í—ã –∑–∞–ø–∏—Å–∞–Ω—ã.")

    class CancelButton(discord.ui.Button):
        def __init__(self):
            super().__init__(label="–û—Ç–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å", emoji="‚õîÔ∏è", style=discord.ButtonStyle.danger)

        async def callback(self, interaction: discord.Interaction):
            for flight in active_flights.values():
                if interaction.user.id in flight["users"]:
                    role = flight["users"].pop(interaction.user.id)
                    flight["roles"][role].remove(interaction.user.mention)
                    await flight["message"].edit(embed=generate_embed(flight), view=self.view)
                    return await safe_send(interaction, "–†–æ–ª—å —É–¥–∞–ª–µ–Ω–∞.")
            await safe_send(interaction, "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

def generate_embed(flight):
    info = (
        f"**–û—Ç–∫—É–¥–∞:** {flight['from']}\n"
        f"**–ö—É–¥–∞:** {flight['to']}\n"
        f"**–ü–µ—Ä–µ—Å–∞–¥–∫–∞:** {flight['transfer']}\n"
        f"**–ó–∞–ø–∞—Å–Ω–æ–π –∞—ç—Ä–æ–ø–æ—Ä—Ç:** {flight['alt']}\n"
        f"**–í—Ä–µ–º—è:** {flight['time']}\n"
        f"**–ì–µ–π—Ç:** {flight['gate']}\n\n"
    )
    roles = "\n".join([
        f"{ROLE_CONFIG[k]['emoji']} {ROLE_CONFIG[k]['label']}: {', '.join(v) if v else '–Ω–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ'}"
        for k, v in flight["roles"].items()
    ])
    return discord.Embed(title=f"üõ´ –†–µ–π—Å {flight['id']}", description=info + roles, color=discord.Color.blue())

async def safe_send(interaction, text):
    if interaction.response.is_done():
        await interaction.followup.send(text, ephemeral=True)
    else:
        await interaction.response.send_message(text, ephemeral=True)

@bot.tree.command(name="—Ä–µ–π—Å", description="–°–æ–∑–¥–∞—Ç—å —Ä–µ–π—Å")
@app_commands.describe(
    departure="–ê—ç—Ä–æ–ø–æ—Ä—Ç –≤—ã–ª–µ—Ç–∞",
    arrival="–ê—ç—Ä–æ–ø–æ—Ä—Ç –ø—Ä–∏–±—ã—Ç–∏—è",
    transfer="–ü–µ—Ä–µ—Å–∞–¥–∫–∞",
    alternate="–ó–∞–ø–∞—Å–Ω–æ–π –∞—ç—Ä–æ–ø–æ—Ä—Ç",
    time="–í—Ä–µ–º—è",
    gate="–ì–µ–π—Ç"
)
async def —Ä–µ–π—Å(interaction: discord.Interaction, departure: str, arrival: str, transfer: str, alternate: str, time: str, gate: str):
    if not any(role.id in ALLOWED_ROLE_IDS for role in interaction.user.roles):
        return await safe_send(interaction, "‚ùå –û—Ç–∫–∞–∑–∞–Ω–æ –≤ –¥–æ—Å—Ç—É–ø–µ.")

    flight_id = random.randint(1000, 9999)
    channel = await interaction.guild.fetch_channel(FLIGHT_CHANNEL_ID)

    msg = await channel.send(
        content=f"[‚úà] @everyone\n[‚úà] {interaction.user.mention} —Å–æ–∑–¥–∞–ª –Ω–æ–≤—ã–π —Ä–µ–π—Å!",
        embed=discord.Embed(title="–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–π—Å–∞...", description="–ü–æ–¥–æ–∂–¥–∏—Ç–µ...", color=discord.Color.blue())
    )

    active_flights[msg.id] = {
        "id": flight_id,
        "from": departure,
        "to": arrival,
        "transfer": transfer,
        "alt": alternate,
        "time": time,
        "gate": gate,
        "message": msg,
        "roles": {k: [] for k in ROLE_CONFIG},
        "users": {}
    }

    await msg.edit(embed=generate_embed(active_flights[msg.id]), view=RoleView(flight_id))
    await safe_send(interaction, f"‚úÖ –†–µ–π—Å —Å–æ–∑–¥–∞–Ω. ID: {flight_id}")

@bot.tree.command(name="–∞–∫—Ç–∏–≤–Ω—ã–µ", description="–°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–π—Å–æ–≤")
async def –∞–∫—Ç–∏–≤–Ω—ã–µ(interaction: discord.Interaction):
    if not active_flights:
        return await safe_send(interaction, "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ–π—Å–æ–≤.")

    view = discord.ui.View()
    for msg_id, flight in active_flights.items():
        view.add_item(discord.ui.Button(label=f"N.{flight['id']}", style=discord.ButtonStyle.success, custom_id=f"show_{msg_id}"))

    list_text = "\n".join([f"N.{f['id']} | {f['from']} ‚Üí {f['to']} (–≥–µ–π—Ç {f['gate']})" for f in active_flights.values()])
    await safe_send(interaction, f"üìã –ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–µ–π—Å—ã:\n{list_text}")
    interaction.followup.send(view=view, ephemeral=True)

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        cid = interaction.data.get("custom_id", "")
        msg_id = int(cid.split("_")[1]) if "_" in cid else None

        if cid.startswith("show_") and msg_id in active_flights:
            flight = active_flights[msg_id]
            view = discord.ui.View()
            view.add_item(discord.ui.Button(label="–ó–∞–∫—Ä—ã—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é", style=discord.ButtonStyle.danger, custom_id=f"close_{msg_id}"))
            view.add_item(discord.ui.Button(label="–°–±—Ä–æ—Å–∏—Ç—å —Ä–µ–π—Å", style=discord.ButtonStyle.danger, custom_id=f"delete_{msg_id}"))
            await safe_send(interaction, "", embed=generate_embed(flight))
            await interaction.followup.send(view=view, ephemeral=True)

        elif cid.startswith("delete_") and msg_id in active_flights:
            flight = active_flights.pop(msg_id)
            await flight["message"].delete()
            await safe_send(interaction, "üóëÔ∏è –†–µ–π—Å —É–¥–∞–ª—ë–Ω.")

        elif cid.startswith("close_") and msg_id in active_flights:
            flight = active_flights[msg_id]
            await flight["message"].edit(view=None)
            await safe_send(interaction, "üîí –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞.")

@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    try:
        await bot.tree.sync()
        print("üîÅ Slash-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")

bot.run(os.getenv("TOKEN"))
